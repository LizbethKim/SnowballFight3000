package gameworld.world;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import graphics.assets.Objects;
import graphics.assets.Terrain;

/**
 * Represents the map. Made of Tile objects.
 * @author Kelsey Jack 300275851
 *
 */
public class Board {
	private Tile[][] board; 	// board[x][y] will access correctly. (same x and y as in location)
	private List<Area> rooms;

	public Board(Tile[][] board) {
		this.board = board;
	}

	// KH if you need this.
	public Board(Tile[][] board, List<Area> rooms) {
		this.board = board;
		this.rooms = rooms;
	}

	public Tile tileAt(Location l) {
		System.out.println(l);
		if (l.x >= 0 && l.x < board.length && l.y >= 0 && l.y < board[0].length) {
			return board[l.x][l.y];
		}
		throw new IllegalArgumentException();
	}

	public boolean canTraverse (Location l) {
		return board[l.x][l.y].isTraversable();
	}

	public void removeItemAt(Location l) {
		if (this.containsLocation(l)) {
				board[l.x][l.y].clear();
		}
	}

	public Terrain[][] convertToEnums () {
		Terrain[][] enumTiles = new Terrain[board.length][board[0].length];
		for (int x = 0; x < board.length; x++) {
			for (int y = 0; y < board[0].length; y++) {
				enumTiles[x][y] = board[x][y].getType();
			}
		}
		return enumTiles;
	}

	public Terrain[][] convertToEnumsInArea (Area a) {
		Terrain[][] enumTiles = new Terrain[board.length][board[0].length];
		for (int x = 0; x < board.length; x++) {
			for (int y = 0; y < board[0].length; y++) {
				if (a.contains(board[x][y])){
					enumTiles[x][y] = board[x][y].getType();
				} else {
					enumTiles[x][y] = Terrain.NULLTILE;
				}
			}
		}
		return enumTiles;
	}

	public Objects[][] itemEnums () {
		Objects[][] enumObjects = new Objects[board.length][board[0].length];
		for (int x = 0; x < board.length; x++) {
			for (int y = 0; y < board[0].length; y++) {
				InanimateEntity on = board[x][y].getOn();
				if (on != null) {
					enumObjects[x][y] = on.asEnum();
				}
			}
		}
		return enumObjects;
	}

	/**
	 * Gets the double array of objects within the area that contains the location
	 * of the player.
	 * @param playerLoc
	 * @return
	 */
	public Objects[][] itemEnumsInArea (Area a) {
		Objects[][] enumObjects = new Objects[board.length][board[0].length];
		for (int x = 0; x < board.length; x++) {
			for (int y = 0; y < board[0].length; y++) {
				InanimateEntity on = board[x][y].getOn();
				if (on != null && a.contains(board[x][y])) {
					enumObjects[x][y] = on.asEnum();
				}
			}
		}
		return enumObjects;
	}

	public Area getAreaContaining(Location l) {
		for (Area a: rooms) {
			if (a.containsLoc(l)) {
				return a;
			}
		}
		throw new IllegalArgumentException();
	}


	public List<Area> getRooms() {
		return Collections.unmodifiableList(this.rooms);
	}

	public Area getSpawnArea(Team t) {
		for (Area a: rooms) {
			if (a instanceof SpawnArea && ((SpawnArea)a).team == t) {
				return a;
			}
		}
		return rooms.get(0);
	}

	public boolean containsLocation(Location l) {
		return l.x >= 0 && l.x < board.length && l.y >= 0 && l.y < board[0].length;
	}

	// For board storage help
	/**
	 * Gets max X coordinate on board
	 * @return
	 */
	public int getXMax() {
		return board.length;
	}

	/**
	 * Gets max Y coordinate on board
	 * @return
	 */
	public int getYMax() {
		return board[0].length;
	}

	public static Board defaultBoard2() {
		Tile[][] board = new Tile[15][20];
		List<Area> rooms = new ArrayList<Area>();
		Area main = new Area();
		for (int x = 1; x < 14; x++) {
			board[x][0] = new Tile(new Location(x, 0), Terrain.GRASS, null);
			board[x][19] = new Tile(new Location(x, 19), Terrain.GRASS, null);
			for (int y = 1; y < 19; y++) {
				board[x][y] = new Tile(new Location(x, y), Terrain.SNOW, null);
			}
		}
		for (int y = 0; y < 20; y++) {
			board[0][y] = new Tile(new Location(0, y), Terrain.GRASS, null);
			board[14][y] = new Tile(new Location(14, y), Terrain.GRASS, null);
		}
		for (int x = 0; x < 15; x++) {
			for (int y = 0; y < 20; y++) {
				main.add(board[x][y]);
			}
		}
		rooms.add(main);

		board[0][0].place(new Furniture("A tree", Objects.TREE));
		board[4][2].place(new Furniture("A tree", Objects.TREE));
		board[5][3].place(new Furniture("A tree", Objects.TREE));
		board[3][14].place(new Furniture("A tree", Objects.TREE));
		board[4][17].place(new Furniture("A tree", Objects.TREE));
		board[12][6].place(new Furniture("A tree", Objects.TREE));
		board[14][18].place(new Furniture("A tree", Objects.TREE));
		board[13][7].place(new Furniture("A tree", Objects.TREE));
		board[10][14].place(new Furniture("A tree", Objects.TREE));
		board[8][12].place(new Powerup(Powerup.Power.FAST_SNOWBALLS));
		board[2][18].place(new Furniture("A bush", Objects.BUSH));
		board[3][4].place(new Furniture("A corner", Objects.CORNER_N_E));
		board[0][4].place(new Furniture("A corner", Objects.CORNER_N_W));
		board[3][5].place(new Furniture("A door", Objects.DOOREW));
		board[3][6].place(new Furniture("A wall", Objects.WALL_N_S));
		board[2][7].place(new Furniture("A door", Objects.DOORNS));
		board[1][7].place(new Furniture("A wall", Objects.WALL_E_W));
		board[0][7].place(new Furniture("A corner", Objects.CORNER_S_W));
		board[3][7].place(new Furniture("A corner", Objects.CORNER_S_E));
		board[6][11].place(new Key("A key", 1));
		board[14][4].place(new Flag(Team.RED));
		board[3][10].place(new Flag(Team.BLUE));
		board[12][17].place(new Powerup(Powerup.Power.HEALTH_POTION));
		board[13][10].place(new Furniture("A bush", Objects.BUSH));

		Bag b = new Bag();
		b.addItem(new Key("A key", 1));
		b.addItem(new Powerup(Powerup.Power.STRONG_HEALTH_POTION));
		board[3][18].place(b);

		Chest c = new Chest("A treasure chest", 1, true);
		c.addItem(new Key("A key", 2));
		c.addItem(new Bag());

		board[13][2].place(c);

		return new Board(board, rooms);

//		board = new Tile[10][10];
//		for (int x = 1; x < 9; x++) {
//			board[x][0] = new Tile(new Location(x, 0), Terrain.GRASS, null);
//			board[x][9] = new Tile(new Location(x, 9), Terrain.GRASS, null);
//			for (int y = 1; y < 9; y++) {
// 				board[x][y] = new Tile(new Location(x, y), Terrain.SNOW, null);
// 			}
// 		}
//		for (int y = 0; y < 10; y++) {
// 			board[0][y] = new Tile(new Location(0, y), Terrain.GRASS, null);
//			board[9][y] = new Tile(new Location(9, y), Terrain.GRASS, null);
//		}
//
// 		board[0][0].place(new Furniture("A tree", Objects.TREE));
// 		board[4][2].place(new Furniture("A tree", Objects.TREE));
// 		board[5][3].place(new Furniture("A tree", Objects.TREE));
// 		board[2][7].place(new Furniture("A bush", Objects.BUSH));
	}

	public static Board defaultBoard() {
		Tile[][] board = new Tile[80][80];
		createDefaultBoardTerrain(board);
		createDefaultBoardObjects(board);
		int[][] areaNums =
			{{0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,2,2,2,2,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{3,3,3,3,3,3,3,3,3,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,5,5,5,5,5,5,5,5,5,5},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,2,2,2,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,2,2,2,2,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,2,2,2,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0}};
		Area areaTwo = new Area();
		Area areaThree = new SpawnArea(Team.RED);
		Area areaFive = new SpawnArea(Team.BLUE);
		Area areaSeven = new Area();
		Area areaEleven = new Area();
		Area areaThirteen = new Area();
		Area areaSeventeen = new Area();
		List<Area> areas = new ArrayList<Area>();
		areas.add(areaTwo); areas.add(areaThree); areas.add(areaFive); areas.add(areaSeven);
		areas.add(areaEleven); areas.add(areaThirteen); areas.add(areaSeventeen);

		for (int x = 0; x < areaNums[0].length; x++) {
			for (int y = 0; y < areaNums.length; y++) {
				if (areaNums[y][x] != 0) {
					if (areaNums[y][x]%2 == 0) { areaTwo.add(board[x][y]); }
					if (areaNums[y][x]%3 == 0) { areaThree.add(board[x][y]); }
					if (areaNums[y][x]%5 == 0) { areaFive.add(board[x][y]); }
					if (areaNums[y][x]%7 == 0) { areaSeven.add(board[x][y]); }
					if (areaNums[y][x]%11 == 0) { areaEleven.add(board[x][y]); }
					if (areaNums[y][x]%13 == 0) { areaThirteen.add(board[x][y]); }
					if (areaNums[y][x]%17 == 0) { areaSeventeen.add(board[x][y]); }
				}
			}
		}
		return new Board(board, areas);
	}

	private static void createDefaultBoardTerrain(Tile[][] board) {
		char[][] terrain = {{'-','-','-','-','-','-','-','-','-','-','-','-','-','G','G','G','G','G','G','G','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','-','-','-','-','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','-','-','-','-','-','-','-','-','-','-','-','-','-'},
				{'-','-','-','-','-','-','-','-','-','-','-','-','-','G','G','G','G','G','G','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','-','-','-','-','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','-','-','-','-','-','-','-','-','-','-','-','-','-'},
				{'-','-','-','-','-','-','-','-','-','-','-','-','-','G','G','G','G','G','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','-','-','-','-','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','-','-','-','-','-','-','-','-','-','-','-','-','-'},
				{'-','-','-','-','-','-','-','-','-','-','-','-','-','G','G','G','G','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','-','-','-','-','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','-','-','-','-','-','-','-','-','-','-','-','-','-'},
				{'-','-','-','-','-','-','-','-','-','-','-','-','-','G','G','G','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','-','-','-','-','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','-','-','-','-','-','-','-','-','-','-','-','-','-'},
				{'-','-','-','-','-','-','-','-','-','-','-','-','-','G','G','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','-','-','-','-','G','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','-','-','-','-','-','-','-','-','-','-','-','-','-'},
				{'-','-','-','-','-','-','-','-','-','-','-','-','-','G','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','-','-','-','-','G','G','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','-','-','-','-','-','-','-','-','-','-','-','-','-'},
				{'-','-','-','-','-','-','-','-','-','-','-','-','-','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','-','-','-','-','G','G','G','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','-','-','-','-','-','-','-','-','-','-','-','-','-'},
				{'-','-','-','-','-','-','-','-','-','-','-','-','-','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','-','-','-','-','G','G','G','G','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','-','-','-','-','-','-','-','-','-','-','-','-','-'},
				{'-','-','-','-','-','-','-','-','-','-','-','-','-','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','-','-','-','-','G','G','G','G','G','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','E','-','-','-','-','-','-','-','-','-','-','-','-','-'},
				{'-','-','-','-','-','-','-','-','-','-','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'-','-','-','-','-','-','-','-','-','-','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'-','-','-','-','-','-','-','-','-','-','G','G','G','G','G','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','E','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','E','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','G','G','G','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','E','E','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','E','E','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','G','G','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','E','E','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','G','S','S','S','S','S','S','S','S','S','S','S','S','S','E','E','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','E','S','E','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','G','S','S','S','S','S','S','S','S','S','S','S','S','S','E','S','E','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','E','S','S','S','S','S','S','S','S','S','S','S','S','S','S','G','G','G','S','S','S','S','S','S','S','S','S','S','S','S','S','S','E','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','B','G','G','G','G','G','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','E','E','S','S','S','S','S','S','S','S','S','S','S','S','S','S','G','G','G','S','S','S','S','S','S','S','G','S','S','S','S','S','E','E','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','E','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','G','S','G','S','S','S','S','S','S','S','S','S','G','S','G','S','E','S','S','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','G','G','G','S','S','S','S','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','E','S','S','S','S','S','S','S','S','S','G','G','S','S','S','S','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','E','E','S','S','S','S','S','S','S','S','G','G','S','S','S','S','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','E','E','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','E','S','E','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','E','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','S','E','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','E','E','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','S','E','E','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','E','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','E','E','S','S','S','S','S','S','S','S','S','G','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','E','S','E','S','S','S','S','S','S','S','S','G','G','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','G','S','S','S','S','S','S','S','S','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','S','E','S','S','S','S','S','S','S','S','S','G','G','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','G','S','S','S','S','S','S','S','S','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','E','E','S','S','S','S','S','S','S','S','G','G','G','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','G','G','S','S','S','S','S','S','S','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','E','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','G','G','G','S','S','S','S','S','S','S','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','G','G','S','S','S','S','S','S','S','S','S','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','I','I','I','I','I','I','I','I','I','I','S','S','S','S','S','S','S','S','S','S','S','G','G','S','S','S','S','S','S','S','S','S','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','S','S','S','S','G','G','S','S','S','S','S','S','S','S','I','I','I','I','I','I','I','I','I','I','I','I','I','I','S','S','S','S','S','S','S','S','S','G','G','G','S','S','S','S','S','S','S','S','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','S','S','S','G','G','G','S','S','S','S','S','S','S','I','I','I','I','I','I','I','I','I','I','I','I','I','I','I','I','S','S','S','S','S','S','S','S','G','S','G','S','S','S','S','S','S','S','S','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','S','S','S','G','G','G','S','S','S','S','S','S','S','I','I','I','I','I','I','I','I','I','I','I','I','I','I','I','I','S','S','S','S','S','S','S','G','S','S','S','S','S','S','S','S','S','S','S','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','S','S','S','S','G','S','G','S','S','S','S','S','S','I','I','I','I','I','I','I','I','I','I','I','I','I','I','I','I','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','-','-','-','-','-','-','-','-','-','-'},
				{'G','G','G','G','G','G','G','G','G','G','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','I','I','I','I','I','I','I','I','I','I','I','I','I','I','I','I','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','S','-','-','-','-','-','-','-','-','-','-'}};

		for (int x = 0; x < terrain[0].length; x++) {
			for (int y = 0; y < terrain.length; y++) {
				if (terrain[y][x] == 'S') {
					board[x][y] = new Tile(new Location(x,y), Terrain.SNOW, null);
					board[79 - x][79 - y] = new Tile(new Location(79 - x, 79 - y), Terrain.SNOW, null);
				} else if (terrain[y][x] == 'G') {
					board[x][y] = new Tile(new Location(x,y), Terrain.GRASS, null);
					board[79 - x][79 - y] = new Tile(new Location(79 - x, 79 - y), Terrain.GRASS, null);
				} else if (terrain[y][x] == 'E') {
					board[x][y] = new Tile(new Location(x,y), Terrain.DIRT, null);
					board[79 - x][79 - y] = new Tile(new Location(79 - x, 79 - y), Terrain.DIRT, null);
				} else if (terrain[y][x] == 'I') {
					board[x][y] = new Tile(new Location(x,y), Terrain.ICE, null);
					board[79 - x][79 - y] = new Tile(new Location(79 - x, 79 - y), Terrain.ICE, null);
				} else if (terrain[y][x] == 'B') {
					board[x][y] = new FlagTile(new Location(x,y), Team.BLUE);
					board[79 - x][79 - y] = new FlagTile(new Location (79 - x, 79 - y), Team.RED);
				} else {
					board[x][y] = new NullTile(new Location(x,y));
					board[79 - x][79 - y] = new NullTile(new Location(79 - x, 79 - y));
				}
			}
		}
	}

	private static void createDefaultBoardObjects(Tile[][]board) {
		// make chests have contents and keys and bags
		String[][] items =

{{"_","_","_","_","_","_","_","_","_","_","_","_","_","F","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","T","_","_","_","_","F","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","T","_","_","_","_","_","_","_","_","_","_","_","_","_"},
{"_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","p","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","|","_","_","p","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","_","_","_"},
{"_","_","_","_","_","_","_","_","_","_","_","_","_","|","p","_","_","_","_","_","_","_","_","p","_","_","_","_","_","c","_","_","_","_","_","_","_","|","_","_","_","_","|","_","_","c","_","p","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","_","_","_"},
{"_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","c","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","|","_","_","_","_","_","_","_","_","_","p","_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","_","_","_"},
{"_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","_","_","_"},
{"_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","_","_","_"},
{"_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","p","_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","_","_","_","_","p","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","_","_","_"},
{"_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","|","p","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","_","_","_"},
{"_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","_","_","_"},
{"_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","_","_","_"},
{"_","_","_","_","_","_","_","_","_","_","F","-","-","-","-","-","-","-","N1","-","-","-","-","-","-","-","-","-","-","-","-","-","N2","-","-","-","-","-","-","-","-","-","-","-","-","-","-","N3","-","-","-","-","-","-","-","-","-","-","-","-","-","N4","-","-","-","-","-","-","-","t","_","_","_","_","_","_","_","_","_","_"},
{"_","_","_","_","_","_","_","_","_","_","|","_","_","_","b","_","_","_","_","_","_","_","_","_","_","_","_","c","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","c","_","_","b","_","_","_","_","_","_","_","_","_","_","_","t","t","_","_","_","t","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"_","_","_","_","_","_","_","_","_","_","|","_","b","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","b","_","_","_","_","_","_","_","_","_","_","_","b","b","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","t","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"F","-","-","-","-","-","-","-","-","-","|","b","b","_","_","_","_","_","t","_","_","_","_","_","_","_","_","_","_","_","t","_","_","_","_","b","_","b","_","_","_","_","_","_","b","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","t","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"|","_","_","_","_","_","_","_","_","_","|","_","b","_","t","_","_","_","t","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","b","b","_","t","t","_","_","_","t","_","b","_","_","_","_","c","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","b","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"|","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","t","_","t","_","_","_","_","_","_","_","_","_","_","_","_","t","b","b","_","b","_","_","_","_","_","t","_","_","_","_","_","_","_","_","_","_","_","_","t","_","_","_","_","_","_","_","_","b","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"|","_","_","_","_","_","_","_","_","_","|","_","_","_","_","t","_","_","_","_","_","_","b","_","_","_","_","_","_","_","_","_","_","_","b","_","_","b","_","_","_","t","t","_","_","_","_","_","_","_","_","_","_","_","_","_","_","t","_","t","_","_","_","b","b","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"|","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","t","t","_","b","b","_","_","_","_","_","_","t","_","_","_","_","_","_","_","_","_","_","t","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","t","t","_","_","_","_","_","b","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"|","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","b","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","t","t","_","_","_","b","_","_","_","_","_","_","_","_","_","_","t","t","_","t","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"|","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","b","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","t","_","_","_","_","_","b","_","b","_","_","_","_","_","_","_","t","_","_","t","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"|","_","_","_","_","_","_","_","_","_","|","_","_","_","t","_","_","_","_","_","_","_","_","_","_","t","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","b","b","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"|","_","_","_","_","_","_","_","_","_","E","_","_","_","_","_","_","_","_","_","_","_","_","t","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","b","b","_","b","_","_","_","_","_","_","_","_","_","_","t","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"|","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","t","_","_","_","_","_","t","t","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","b","_","_","b","_","_","_","_","_","_","_","t","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"|","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","_","_","t","_","_","_","_","_","_","_","_","_","_","_","_","t","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","t","t","_","_","_","_","_","_","_","_","_","t","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"|","_","_","_","_","_","_","_","_","_","|","_","_","t","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","t","_","_","_","t","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","t","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"|","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","c","_","_","_","_","_","_","_","t","_","t","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","t","|","_","_","_","_","_","_","_","_","_","_"},
{"|","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","b","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","t","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","t","t","_","_","_","t","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"|","_","_","_","_","_","_","_","_","_","|","_","_","_","_","b","b","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","t","t","_","_","_","_","_","_","_","b","_","_","_","_","_","_","_","_","_","_","_","t","_","_","_","_","_","_","_","t","_","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"|","_","_","_","_","_","_","_","_","_","|","_","_","_","b","_","_","_","_","_","_","_","_","_","_","b","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","t","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"|","_","_","_","_","_","_","_","_","_","|","_","_","_","_","b","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","t","_","_","b","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"|","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","b","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"|","_","_","_","_","_","_","_","_","_","E","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","t","_","_","_","_","_","b","_","t","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","t","_","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"|","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","_","_","_","b","_","_","_","_","_","_","_","_","_","_","_","t","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","t","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"|","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","t","t","_","_","_","_","_","_","t","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","t","t","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"|","_","_","_","_","_","_","_","_","_","|","_","_","_","t","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","t","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","t","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"|","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","_","_","_","_","t","t","_","_","_","t","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"|","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","t","_","_","_","_","_","_","_","_","_","_","_","_","t","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"|","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","t","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","b","b","_","_","_","b","_","_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"|","_","_","_","_","_","_","_","_","_","|","_","_","t","_","_","_","_","_","_","_","_","_","_","_","t","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","b","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_"},
{"L","-","-","-","-","-","-","-","-","-","|","_","_","_","_","_","_","_","_","_","_","_","_","t","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","f","_","_","_","_","_","_","_","_","_","_","_","_","b","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","|","_","_","_","_","_","_","_","_","_","_"}};
		for (int x = 0; x < items[0].length; x++) {
			for (int y = 0; y < items.length; y++) {
				if (items[y][x] == "|") {
					board[x][y].place(new Furniture("A wall", Objects.WALL_N_S));
					board[79 - x][79 - y].place(new Furniture("A wall", Objects.WALL_N_S));
				} else if (items[y][x] == "-") {
					board[x][y].place(new Furniture("A wall", Objects.WALL_E_W));
					board[79 - x][79 - y].place(new Furniture("A wall", Objects.WALL_E_W));
				} else if (items[y][x] == "E") {
					board[x][y].place(new Door("A door", 0, Direction.EAST));
					board[79 - x][79 - y].place(new Door("A door", 0, Direction.EAST));
				} else if (items[y][x] == "F") {
					board[x][y].place(new Furniture("A wall", Objects.CORNER_N_W));
					board[79 - x][79 - y].place(new Furniture("A wall", Objects.CORNER_S_E));
				}else if (items[y][x] == "T") {
					board[x][y].place(new Furniture("A wall", Objects.CORNER_N_E));
					board[79 - x][79 - y].place(new Furniture("A wall", Objects.CORNER_S_W));
				} else if (items[y][x] == "L") {
					board[x][y].place(new Furniture("A wall", Objects.CORNER_S_W));
					board[79 - x][79 - y].place(new Furniture("A wall", Objects.CORNER_N_E));
				} else if (items[y][x] == "J") {
					board[x][y].place(new Furniture("A wall", Objects.CORNER_S_E));
					board[79 - x][79 - y].place(new Furniture("A wall", Objects.CORNER_N_W));
				} else if (items[y][x] == "t") {
					board[x][y].place(new Furniture("A tree", Objects.TREE));
					board[79 - x][79 - y].place(new Furniture("A tree", Objects.TREE));
				} else if (items[y][x] == "b") {
					board[x][y].place(new Furniture("A bush", Objects.BUSH));
					board[79 - x][79 - y].place(new Furniture("A bush", Objects.BUSH));
				} else if (items[y][x] == "p") {
					board[x][y].place(new Powerup());
					board[79 - x][79 - y].place(new Powerup());
				} else if (items[y][x] == "c") {
					board[x][y].place(new Chest(""));
					board[79 - x][79 - y].place(new Chest(""));
				} else if (items[y][x] == "f") {
					board[x][y].place(new Flag(Team.BLUE));
					board[79 - x][79 - y].place(new Flag(Team.RED));
				} else if (items[y][x] == "N1") {
					board[x][y].place(new Door("A door", 2, Direction.NORTH));
					board[79 - 13][79 - 36].place(new Key("Unlocks a door", 3));
					board[79 - x][79 - y].place(new Door("A door", 3, Direction.NORTH));
					board[13][36].place(new Key("Unlocks a door", 3));
				} else if (items[y][x] == "N2") {
					board[x][y].place(new Door("A door", 4, Direction.NORTH));
					board[25][32].place(new Key("Unlocks a door", 4));
					board[79 - x][79 - y].place(new Door("A door", 5, Direction.NORTH));
					board[79 - 25][79 - 32].place(new Key("Unlocks a door", 5));
				} else if (items[y][x] == "N3") {
					board[x][y].place(new Door("A door", 6, Direction.NORTH));
					board[79 - x][79 - y].place(new Door("A door", 7, Direction.NORTH));
					board[29][13].place(new Key("Unlocks a door", 7));
					board[79 - 29][79 - 13].place(new Key("Unlocks a door", 6));
				} else if (items[y][x] == "N4") {
					board[x][y].place(new Door("A door", 8, Direction.NORTH));
					board[79 - x][79 - y].place(new Door("A door", 9, Direction.NORTH));
					board[11][11].place(new Key("Unlocks a door", 8));
					board[79 - 11][79 - 11].place(new Key("Unlocks a door", 9));
				}
			}
		}
	}
}
